# Методы для работы со списками
l = [True, 1, 2, 3, ['test', 10.0], 'list']
l2 = ['hi', 15]

print(len(l))                               # Длина списка равна 6
print(l[5])                                 # Обращение к конкретному элементу
print(l[4][0])                              # Обращение к элементу списка внутри списка
print(l[-1])                                # Обращение к отрицательному элементу списка начинается с 1
print(l[0:3])                               # Срезы в списках
l[2] = 'www'                                # Изменяем элемент списка
print(l)
l[:2] = [10, 15]                            # Изменяем элемент списка массово
print(l)
l = l + l2                                  # Сложение списков
print(l)                                    # элементы добавились в конец


# list.append(x) - Добавляет элемент в конец списка
l.append('new')
print(l)
# list.extend(L) - Расширяет список list, добавляя в конец все элементы списка L
l.extend([5, 'last'])
print(l)
# list.insert(i, x) - Вставляет на i-ый элемент значение x. Остальные элементы сдвигаются
l.insert(4, 'list')
print(l)
# list.remove(x) - Удаляет первый элемент в списке, имеющий значение x. ValueError,
# если такого элемента не существует
l.remove('list')
print(l)
# Удаляет элемент с конкретной позиции
del l[1]
print(l)
#Удаление из вложенного списка
del l[3][0]
print(l)
# Удаление срезами
#del l[4:]      # Удаляет все после 4го включительно
#del l[:1]      # Удаляет все до 1го включительно
#del l[1:3]     # Удаляет от 1 до 3го элемента
print(l)
# list.pop([i]) - Удаляет i-ый элемент и возвращает его.
# Если индекс не указан, удаляется последний элемент
e1 = l.pop()
print(l, e1)
e1 = l.pop(4)
print(l, e1)
# list.index(x, [start [, end]]) - Возвращает положение первого элемента со значением x
# (при этом поиск ведется от start до end)
i1 = l.index(3, 0, 6)
print(i1)
# list.count(x) - Возвращает количество элементов со значением x
c1 = l.count(15)
print(c1)
# list.sort([key=функция], [reverse=False]) - Сортирует список на основе функции
# работает только с однотипными значениями
l3 = ['hello', 'hi', 'David', 'world', 'test']
l3.sort()
print(l3)
# list.reverse() - Разворачивает список задом наперёд
l.reverse()
print(l)
# list.copy() - Возвращает копию списка
l.copy()
print(l)
# list.clear() - Очищает список
l.clear()
print(l)

# str.join() - Возвращает строку из элементов списка через разделитель str
str_list = list('Hello')
print(str_list)                             # ['H', 'e', 'l', 'l', 'o']
s = '-'.join(str_list)
print(s)                                    # H-e-l-l-o

# join применим только к строке. c int можно работать через функцию map()
# map() позволяет применять функцию к каждому элементу последовательности
int_list = list(range(1, 10))
print(int_list)                             # [1, 2, 3, 4, 5, 6, 7, 8, 9]
s = '-'.join(map(str, int_list))
print(s)                                    # 1-2-3-4-5-6-7-8-9